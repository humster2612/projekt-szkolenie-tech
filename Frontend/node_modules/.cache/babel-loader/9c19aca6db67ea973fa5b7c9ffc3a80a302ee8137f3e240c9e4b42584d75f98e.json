{"ast":null,"code":"import { oldInstance } from \"../assets/images/api/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nconst initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => u.id === action.userId ? {\n          ...u,\n          followed: true\n        } : u)\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => u.id === action.userId ? {\n          ...u,\n          followed: false\n        } : u)\n      };\n    case SET_USERS:\n      return {\n        ...state,\n        users: action.users\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      };\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalUsersCount\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      };\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n      };\n    default:\n      return state;\n  }\n};\n\n// Action Types\n\n// Action Creators\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\n\n// Thunk Creators\nexport const getUsers = (pageNumber, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  try {\n    const response = await oldInstance.get(`users?page=${pageNumber}&count=${pageSize}`);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(response.data.items));\n    dispatch(setUsersTotalCount(response.data.totalCount));\n  } catch (error) {\n    dispatch(toggleIsFetching(false));\n    console.error(\"There was an error fetching the users data!\", error);\n  }\n};\nexport const follow = userId => async dispatch => {\n  dispatch(toggleFollowingProgress(true, userId));\n  try {\n    const response = await oldInstance.post(`follow/${userId}`);\n    if (response.data.resultCode === 0) {\n      dispatch(followSuccess(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n  } catch (error) {\n    dispatch(toggleFollowingProgress(false, userId));\n    console.error(\"There was an error following the user!\", error);\n  }\n};\nexport const unfollow = userId => async dispatch => {\n  dispatch(toggleFollowingProgress(true, userId));\n  try {\n    const response = await oldInstance.delete(`follow/${userId}`);\n    if (response.data.resultCode === 0) {\n      dispatch(unfollowSuccess(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n  } catch (error) {\n    dispatch(toggleFollowingProgress(false, userId));\n    console.error(\"There was an error unfollowing the user!\", error);\n  }\n};\nexport default usersReducer;","map":{"version":3,"names":["oldInstance","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","filter","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","toggleFollowingProgress","getUsers","pageNumber","dispatch","response","get","data","items","totalCount","error","console","follow","post","resultCode","unfollow","delete"],"sources":["/Users/victoriapolovyy/Desktop/projekt-szkolenie-tech/Frontend/src/redux/Users-reducer.ts"],"sourcesContent":["import { followAPI } from \"../assets/images/api/api\";\nimport { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { RootState } from './redux-store';\nimport { oldInstance } from \"../assets/images/api/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\ntype UserType = {\n  id: number;\n  name: string;\n  status: string;\n  followed: boolean;\n  photos: {\n    small: string | null;\n    large: string | null;\n  };\n  location?: {\n    country: string;\n    city: string;\n  };\n};\n\nconst initialState: InitialStateType = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [],\n};\n\nconst usersReducer = (state = initialState, action: UsersActionTypes): InitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => u.id === action.userId ? { ...u, followed: true } : u)\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => u.id === action.userId ? { ...u, followed: false } : u)\n            };\n        case SET_USERS:\n            return { ...state, users: action.users };\n        case SET_CURRENT_PAGE:\n            return { ...state, currentPage: action.currentPage };\n        case SET_TOTAL_USERS_COUNT:\n            return { ...state, totalUsersCount: action.totalUsersCount };\n        case TOGGLE_IS_FETCHING:\n            return { ...state, isFetching: action.isFetching };\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            };\n        default:\n            return state;\n    }\n};\n\n// Action Types\ntype FollowActionType = {\n    type: typeof FOLLOW;\n    userId: number;\n};\n\ntype UnfollowActionType = {\n    type: typeof UNFOLLOW;\n    userId: number;\n};\n\ntype SetUsersActionType = {\n    type: typeof SET_USERS;\n    users: UserType[];\n};\n\ntype SetCurrentPageActionType = {\n    type: typeof SET_CURRENT_PAGE;\n    currentPage: number;\n};\n\ntype SetTotalUsersCountActionType = {\n    type: typeof SET_TOTAL_USERS_COUNT;\n    totalUsersCount: number;\n};\n\ntype ToggleIsFetchingActionType = {\n    type: typeof TOGGLE_IS_FETCHING;\n    isFetching: boolean;\n};\n\ntype ToggleFollowingProgressActionType = {\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS;\n    isFetching: boolean;\n    userId: number;\n};\n\ntype UsersActionTypes = FollowActionType | UnfollowActionType | SetUsersActionType | SetCurrentPageActionType | SetTotalUsersCountActionType | ToggleIsFetchingActionType | ToggleFollowingProgressActionType;\n\n// Action Creators\nexport const followSuccess = (userId: number): FollowActionType => ({ type: FOLLOW, userId });\nexport const unfollowSuccess = (userId: number): UnfollowActionType => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users: UserType[]): SetUsersActionType => ({ type: SET_USERS, users });\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setUsersTotalCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({\n    type: SET_TOTAL_USERS_COUNT, totalUsersCount\n});\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId\n});\n\n// Thunk Creators\nexport const getUsers = (pageNumber: number, pageSize: number): ThunkAction<void, RootState, unknown, Action<string>> => async (dispatch) => {\n    dispatch(toggleIsFetching(true));\n    try {\n        const response = await oldInstance.get(`users?page=${pageNumber}&count=${pageSize}`);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(response.data.items));\n        dispatch(setUsersTotalCount(response.data.totalCount));\n    } catch (error) {\n        dispatch(toggleIsFetching(false));\n        console.error(\"There was an error fetching the users data!\", error);\n    }\n};\n\nexport const follow = (userId: number): ThunkAction<void, RootState, unknown, Action<string>> => async (dispatch) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    try {\n        const response = await oldInstance.post(`follow/${userId}`);\n        if (response.data.resultCode === 0) {\n            dispatch(followSuccess(userId));\n        }\n        dispatch(toggleFollowingProgress(false, userId));\n    } catch (error) {\n        dispatch(toggleFollowingProgress(false, userId));\n        console.error(\"There was an error following the user!\", error);\n    }\n};\nexport const unfollow = (userId: number): ThunkAction<void, RootState, unknown, Action<string>> => async (dispatch) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    try {\n        const response = await oldInstance.delete(`follow/${userId}`);\n        if (response.data.resultCode === 0) {\n            dispatch(unfollowSuccess(userId));\n        }\n        dispatch(toggleFollowingProgress(false, userId));\n    } catch (error) {\n        dispatch(toggleFollowingProgress(false, userId));\n        console.error(\"There was an error unfollowing the user!\", error);\n    }\n};\n\nexport default usersReducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}