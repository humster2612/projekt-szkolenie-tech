{"ast":null,"code":"import { authAPI } from \"../assets/images/api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  error: null\n};\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload,\n        isAuth: true,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const login = (email, password) => async dispatch => {\n  try {\n    let response = await authAPI.login(email, password);\n    if (response.data) {\n      const {\n        userId\n      } = response.data;\n      dispatch(setAuthUserData(userId, email, email, true));\n    }\n  } catch (error) {\n    dispatch({\n      type: 'LOGIN_ERROR',\n      error: error.response.data.message\n    });\n  }\n};\nexport const register = (username, email, password) => async dispatch => {\n  try {\n    let response = await authAPI.register(username, email, password);\n    if (response.data) {\n      const {\n        userId\n      } = response.data;\n      dispatch(setAuthUserData(userId, email, email, true));\n    }\n  } catch (error) {\n    dispatch({\n      type: 'REGISTER_ERROR',\n      error: error.response.data.message\n    });\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","error","authReducer","state","action","type","payload","setAuthUserData","password","dispatch","response","data","message","register","username"],"sources":["/Users/victoriapolovyy/Desktop/projekt-szkolenie-tech/Frontend/src/redux/auth-reducer.ts"],"sourcesContent":["import { authAPI } from \"../assets/images/api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nexport type InitialStateType = {\n    userId: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean,\n    error: string | null\n};\n\nlet initialState: InitialStateType = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    error: null\n};\n\nconst authReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n                isAuth: true,\n                error: null\n            };\n        default:\n            return state;\n    }\n};\n\ntype SetAuthUsersDataActionPayloadType = {\n    userId: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean\n};\n\ntype SetAuthUsersDataActionType = {\n    type: typeof SET_USER_DATA,\n    payload: SetAuthUsersDataActionPayloadType\n};\n\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetAuthUsersDataActionType => ({\n    type: SET_USER_DATA,\n    payload: { userId, email, login, isAuth }\n});\n\nexport const login = (email: string, password: string) => async (dispatch: any) => {\n    try {\n        let response = await authAPI.login(email, password);\n        if (response.data) {\n            const { userId } = response.data;\n            dispatch(setAuthUserData(userId, email, email, true));\n        }\n    } catch (error) {\n        dispatch({ type: 'LOGIN_ERROR', error: error.response.data.message });\n    }\n};\n\nexport const register = (username: string, email: string, password: string) => async (dispatch: any) => {\n    try {\n        let response = await authAPI.register(username, email, password);\n        if (response.data) {\n            const { userId } = response.data;\n            dispatch(setAuthUserData(userId, email, email, true));\n        }\n    } catch (error) {\n        dispatch({ type: 'REGISTER_ERROR', error: error.response.data.message });\n    }\n};\n\nexport default authReducer;"],"mappings":"AAAA,SAASA,OAAO,QAAQ,0BAA0B;AAClD,MAAMC,aAAa,GAAG,eAAe;AAUrC,IAAIC,YAA8B,GAAG;EACjCC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,KAAK;EACbC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAW,KAAuB;EACzE,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKV,aAAa;MACd,OAAO;QACH,GAAGQ,KAAK;QACR,GAAGC,MAAM,CAACE,OAAO;QACjBN,MAAM,EAAE,IAAI;QACZC,KAAK,EAAE;MACX,CAAC;IACL;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;AAcD,OAAO,MAAMI,eAAe,GAAGA,CAACV,MAAqB,EAAEC,KAAoB,EAAEC,KAAoB,EAAEC,MAAe,MAAkC;EAChJK,IAAI,EAAEV,aAAa;EACnBW,OAAO,EAAE;IAAET,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAO;AAC5C,CAAC,CAAC;AAEF,OAAO,MAAMD,KAAK,GAAGA,CAACD,KAAa,EAAEU,QAAgB,KAAK,MAAOC,QAAa,IAAK;EAC/E,IAAI;IACA,IAAIC,QAAQ,GAAG,MAAMhB,OAAO,CAACK,KAAK,CAACD,KAAK,EAAEU,QAAQ,CAAC;IACnD,IAAIE,QAAQ,CAACC,IAAI,EAAE;MACf,MAAM;QAAEd;MAAO,CAAC,GAAGa,QAAQ,CAACC,IAAI;MAChCF,QAAQ,CAACF,eAAe,CAACV,MAAM,EAAEC,KAAK,EAAEA,KAAK,EAAE,IAAI,CAAC,CAAC;IACzD;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZQ,QAAQ,CAAC;MAAEJ,IAAI,EAAE,aAAa;MAAEJ,KAAK,EAAEA,KAAK,CAACS,QAAQ,CAACC,IAAI,CAACC;IAAQ,CAAC,CAAC;EACzE;AACJ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAgB,EAAEhB,KAAa,EAAEU,QAAgB,KAAK,MAAOC,QAAa,IAAK;EACpG,IAAI;IACA,IAAIC,QAAQ,GAAG,MAAMhB,OAAO,CAACmB,QAAQ,CAACC,QAAQ,EAAEhB,KAAK,EAAEU,QAAQ,CAAC;IAChE,IAAIE,QAAQ,CAACC,IAAI,EAAE;MACf,MAAM;QAAEd;MAAO,CAAC,GAAGa,QAAQ,CAACC,IAAI;MAChCF,QAAQ,CAACF,eAAe,CAACV,MAAM,EAAEC,KAAK,EAAEA,KAAK,EAAE,IAAI,CAAC,CAAC;IACzD;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZQ,QAAQ,CAAC;MAAEJ,IAAI,EAAE,gBAAgB;MAAEJ,KAAK,EAAEA,KAAK,CAACS,QAAQ,CAACC,IAAI,CAACC;IAAQ,CAAC,CAAC;EAC5E;AACJ,CAAC;AAED,eAAeV,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}