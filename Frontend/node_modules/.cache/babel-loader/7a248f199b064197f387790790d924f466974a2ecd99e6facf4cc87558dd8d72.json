{"ast":null,"code":"var _jsxFileName = \"/Users/victoriapolovyy/Desktop/projekt-szkolenie-tech/Frontend/src/components/Register/Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { register } from '../../redux/auth-reducer.ts';\nimport s from './Register.module.css';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst renderField = ({\n  input,\n  meta: {\n    touched,\n    error\n  },\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: s.formControl,\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    ...input,\n    ...props,\n    className: touched && error ? s.error : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this), touched && error && /*#__PURE__*/_jsxDEV(\"span\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 30\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 5\n}, this);\nconst RegisterForm = ({\n  handleSubmit,\n  error\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: s.registerBlock,\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Register\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"username\",\n        placeholder: \"Username\",\n        component: renderField,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        placeholder: \"Email\",\n        component: renderField,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"password\",\n        placeholder: \"Password\",\n        component: renderField,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 5\n}, this);\n_c = RegisterForm;\nconst RegisterReduxForm = reduxForm({\n  form: 'register',\n  validate: values => {\n    const errors = {};\n    if (!values.username) {\n      errors.username = 'Username is required';\n    }\n    if (!values.email) {\n      errors.email = 'Email is required';\n    }\n    if (!values.password) {\n      errors.password = 'Password is required';\n    }\n    return errors;\n  }\n})(RegisterForm);\n_c2 = RegisterReduxForm;\nconst Register = ({\n  register,\n  error\n}) => {\n  _s();\n  const [isRegistered, setIsRegistered] = useState(false);\n  const handleSubmit = async formData => {\n    try {\n      await register(formData.username, formData.email, formData.password);\n      setIsRegistered(true);\n    } catch (error) {\n      console.error('Error registering user:', error);\n    }\n  };\n  if (isRegistered) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(RegisterReduxForm, {\n    onSubmit: handleSubmit,\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n};\n_s(Register, \"gNc2lBN050U6+/gZkUE+Flfpews=\");\n_c3 = Register;\nconst mapStateToProps = state => ({\n  error: state.auth.error\n});\nexport default connect(mapStateToProps, {\n  register\n})(Register);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RegisterForm\");\n$RefreshReg$(_c2, \"RegisterReduxForm\");\n$RefreshReg$(_c3, \"Register\");","map":{"version":3,"names":["React","useState","Field","reduxForm","connect","register","s","Navigate","jsxDEV","_jsxDEV","renderField","input","meta","touched","error","props","className","formControl","children","fileName","_jsxFileName","lineNumber","columnNumber","RegisterForm","handleSubmit","registerBlock","onSubmit","name","placeholder","component","type","_c","RegisterReduxForm","form","validate","values","errors","username","email","password","_c2","Register","_s","isRegistered","setIsRegistered","formData","console","to","_c3","mapStateToProps","state","auth","$RefreshReg$"],"sources":["/Users/victoriapolovyy/Desktop/projekt-szkolenie-tech/Frontend/src/components/Register/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { register } from '../../redux/auth-reducer.ts';\nimport s from './Register.module.css';\nimport { Navigate } from 'react-router-dom';\n\nconst renderField = ({ input, meta: { touched, error }, ...props }) => (\n    <div className={s.formControl}>\n        <input {...input} {...props} className={touched && error ? s.error : ''} />\n        {touched && error && <span>{error}</span>}\n    </div>\n);\n\nconst RegisterForm = ({ handleSubmit, error }) => (\n    <div className={s.registerBlock}>\n        <h1>Register</h1>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field name=\"username\" placeholder=\"Username\" component={renderField} type=\"text\" />\n            </div>\n            <div>\n                <Field name=\"email\" placeholder=\"Email\" component={renderField} type=\"email\" />\n            </div>\n            <div>\n                <Field name=\"password\" placeholder=\"Password\" component={renderField} type=\"password\" />\n            </div>\n            {error && <div className={s.error}>{error}</div>}\n            <div>\n                <button type=\"submit\">Register</button>\n            </div>\n        </form>\n    </div>\n);\n\nconst RegisterReduxForm = reduxForm({\n    form: 'register',\n    validate: values => {\n        const errors = {};\n        if (!values.username) {\n            errors.username = 'Username is required';\n        }\n        if (!values.email) {\n            errors.email = 'Email is required';\n        }\n        if (!values.password) {\n            errors.password = 'Password is required';\n        }\n        return errors;\n    }\n})(RegisterForm);\n\nconst Register = ({ register, error }) => {\n    const [isRegistered, setIsRegistered] = useState(false);\n\n    const handleSubmit = async (formData) => {\n        try {\n            await register(formData.username, formData.email, formData.password);\n            setIsRegistered(true);\n        } catch (error) {\n            console.error('Error registering user:', error);\n        }\n    };\n\n    if (isRegistered) {\n        return <Navigate to=\"/login\" />;\n    }\n\n    return <RegisterReduxForm onSubmit={handleSubmit} error={error} />;\n};\n\nconst mapStateToProps = (state) => ({\n    error: state.auth.error\n});\n\nexport default connect(mapStateToProps, { register })(Register);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,SAAS,QAAQ,YAAY;AAC7C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,OAAOC,CAAC,MAAM,uBAAuB;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI,EAAE;IAAEC,OAAO;IAAEC;EAAM,CAAC;EAAE,GAAGC;AAAM,CAAC,kBAC9DN,OAAA;EAAKO,SAAS,EAAEV,CAAC,CAACW,WAAY;EAAAC,QAAA,gBAC1BT,OAAA;IAAA,GAAWE,KAAK;IAAA,GAAMI,KAAK;IAAEC,SAAS,EAAEH,OAAO,IAAIC,KAAK,GAAGR,CAAC,CAACQ,KAAK,GAAG;EAAG;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EAC1ET,OAAO,IAAIC,KAAK,iBAAIL,OAAA;IAAAS,QAAA,EAAOJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACxC,CACR;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC,YAAY;EAAEV;AAAM,CAAC,kBACzCL,OAAA;EAAKO,SAAS,EAAEV,CAAC,CAACmB,aAAc;EAAAP,QAAA,gBAC5BT,OAAA;IAAAS,QAAA,EAAI;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eACjBb,OAAA;IAAMiB,QAAQ,EAAEF,YAAa;IAAAN,QAAA,gBACzBT,OAAA;MAAAS,QAAA,eACIT,OAAA,CAACP,KAAK;QAACyB,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACC,SAAS,EAAEnB,WAAY;QAACoB,IAAI,EAAC;MAAM;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,eACNb,OAAA;MAAAS,QAAA,eACIT,OAAA,CAACP,KAAK;QAACyB,IAAI,EAAC,OAAO;QAACC,WAAW,EAAC,OAAO;QAACC,SAAS,EAAEnB,WAAY;QAACoB,IAAI,EAAC;MAAO;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC,eACNb,OAAA;MAAAS,QAAA,eACIT,OAAA,CAACP,KAAK;QAACyB,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACC,SAAS,EAAEnB,WAAY;QAACoB,IAAI,EAAC;MAAU;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,EACLR,KAAK,iBAAIL,OAAA;MAAKO,SAAS,EAAEV,CAAC,CAACQ,KAAM;MAAAI,QAAA,EAAEJ;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChDb,OAAA;MAAAS,QAAA,eACIT,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACN,CACR;AAACS,EAAA,GAnBIR,YAAY;AAqBlB,MAAMS,iBAAiB,GAAG7B,SAAS,CAAC;EAChC8B,IAAI,EAAE,UAAU;EAChBC,QAAQ,EAAEC,MAAM,IAAI;IAChB,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,IAAI,CAACD,MAAM,CAACE,QAAQ,EAAE;MAClBD,MAAM,CAACC,QAAQ,GAAG,sBAAsB;IAC5C;IACA,IAAI,CAACF,MAAM,CAACG,KAAK,EAAE;MACfF,MAAM,CAACE,KAAK,GAAG,mBAAmB;IACtC;IACA,IAAI,CAACH,MAAM,CAACI,QAAQ,EAAE;MAClBH,MAAM,CAACG,QAAQ,GAAG,sBAAsB;IAC5C;IACA,OAAOH,MAAM;EACjB;AACJ,CAAC,CAAC,CAACb,YAAY,CAAC;AAACiB,GAAA,GAfXR,iBAAiB;AAiBvB,MAAMS,QAAQ,GAAGA,CAAC;EAAEpC,QAAQ;EAAES;AAAM,CAAC,KAAK;EAAA4B,EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMuB,YAAY,GAAG,MAAOqB,QAAQ,IAAK;IACrC,IAAI;MACA,MAAMxC,QAAQ,CAACwC,QAAQ,CAACR,QAAQ,EAAEQ,QAAQ,CAACP,KAAK,EAAEO,QAAQ,CAACN,QAAQ,CAAC;MACpEK,eAAe,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACZgC,OAAO,CAAChC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,IAAI6B,YAAY,EAAE;IACd,oBAAOlC,OAAA,CAACF,QAAQ;MAACwC,EAAE,EAAC;IAAQ;MAAA5B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;EAEA,oBAAOb,OAAA,CAACuB,iBAAiB;IAACN,QAAQ,EAAEF,YAAa;IAACV,KAAK,EAAEA;EAAM;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtE,CAAC;AAACoB,EAAA,CAjBID,QAAQ;AAAAO,GAAA,GAARP,QAAQ;AAmBd,MAAMQ,eAAe,GAAIC,KAAK,KAAM;EAChCpC,KAAK,EAAEoC,KAAK,CAACC,IAAI,CAACrC;AACtB,CAAC,CAAC;AAEF,eAAeV,OAAO,CAAC6C,eAAe,EAAE;EAAE5C;AAAS,CAAC,CAAC,CAACoC,QAAQ,CAAC;AAAC,IAAAV,EAAA,EAAAS,GAAA,EAAAQ,GAAA;AAAAI,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAJ,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}